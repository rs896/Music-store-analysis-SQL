SELECT * FROM ALBUM



-- Q1 SENIOR MOST EMPLOYEE BASED ON JOB TITLE

SELECT * FROM EMPLOYEE
ORDER BY LEVELS DESC
LIMIT 1


-- Q2 COUNTRIES HAVE MOST INVOICES

SELECT COUNT(*) AS C, BILLING_COUNTRY
FROM INVOICE 
GROUP BY BILLING_COUNTRY
ORDER BY C DESC



-- Q3 TOP 3 VALUES  OF TOTAL INVOICE

SELECT TOTAL FROM INVOICE
ORDER BY TOTAL DESC
LIMIT 3

Q4 BEST CUSTOMER CITY ? 


SELECT SUM(TOTAL) AS INVOICE_TOTAL, BILLING_CITY
FROM INVOICE
GROUP BY BILLING_CITY
ORDER BY INVOICE_TOTAL DESC


Q5 BEST CUSTOMER ? THE CUSTOMER WHO CUSTOMER SPENT THE MOST MONEY BEST . 


SELECT CUSTOMER.CUSTOMER_ID, CUSTOMER.FIRST_NAME, CUSTOMER.LAST_NAME, SUM(INVOICE.TOTAL) AS TOTAL
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
GROUP BY CUSTOMER.CUSTOMER_ID
ORDER BY TOTAL DESC
LIMIT 1 

-Q1

SELECT DISTINCT EMAIL,FIRST_NAME, LAST_NAME
FROM CUSTOMER 
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID = INVOICE.CUSTOMER_ID
JOIN INVOICE_LINE ON INVOICE.INVOICE_ID = INVOICE_LINE.INVOICE_ID
WHERE TRACK_ID IN(
SELECT TRACK_ID FROM TRACK
JOIN GENRE ON TRACK.GENRE_ID = GENRE.GENRE_ID
WHERE GENRE.NAME LIKE 'ROCK'
)
ORDER BY EMAIL;





Q2 


SELECT ARTIST.ARTIST_ID, ARTIST.NAME,COUNT(ARTIST.ARTIST_ID) AS NUMBER_OF_SONGS
FROM TRACK
JOIN ALBUM ON ALBUM.ALBUM_ID = TRACK.ALBUM_ID
JOIN ARTIST ON ARTIST.ARTIST_ID = ALBUM.ARTIST_ID
JOIN GENRE ON GENRE.GENRE_ID = ALBUM.ARTIST_ID
WHERE GENRE.NAME LIKE 'ROCK'
GROUP BY ARTIST.ARTIST_ID
ORDER BY NUMBER_OF_SONGS DESC
LIMIT 10;










